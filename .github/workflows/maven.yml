# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy to Digital Ocean

on:
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Storekeeper - Latest image version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 1. Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
      - name: 2. Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: 3. Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: 4. Build With Maven
        run: mvn -U clean install --file ~/work/storekeeper-server/storekeeper-server/pom.xml
      - name: 5. SonarCloud Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run:
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=cbprojects_storekeeper-server
          -Dsonar.sources=.
          -Dsonar.junit.reportPaths=target/site/jacoco/
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}          
      - name: 6. Test ls JAR
        run: ls ~/work/storekeeper-server/storekeeper-server/target
      # - name: 7. Delete prevs docker image & network
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USERNAME }}
      #     password: ${{ secrets.SSH_PASSWORD }}
      #     port: ${{ secrets.SSH_PORT }}
      #     script: |
      #       docker rmi storekeeper-server:latest
      #       docker network rm storekeeper_network
      - name: 8. Delete prev JAR & Dockerfiles
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /opt/docker/services/storekeeper
            ls
            rm -r Storekeeper.jar
            rm -r .env
            rm -r Dockerfile
            rm -r docker-compose.yml
            ls
      - name: 9. Transfer JAR SSH
        uses: garygrossgarten/github-action-scp@v0.7.3
        with:
          local: ./target/Storekeeper.jar
          remote: /opt/docker/services/storekeeper/Storekeeper.jar
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
      - name: 10. Transfer Dockerfile SSH
        uses: garygrossgarten/github-action-scp@v0.7.3
        with:
          local: ./Dockerfile
          remote: /opt/docker/services/storekeeper/Dockerfile
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
      - name: 11. Transfer docker-compose file SSH
        uses: garygrossgarten/github-action-scp@v0.7.3
        with:
          local: ./docker-compose.yml
          remote: /opt/docker/services/storekeeper/docker-compose.yml
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
      - name: 12. Transfer environment file SSH
        uses: garygrossgarten/github-action-scp@v0.7.3
        with:
          local: ./.env
          remote: /opt/docker/services/storekeeper/.env
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
      - name: 13. Deploy new version with docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }} 
          port: ${{ secrets.SSH_PORT }}
          script: |
            export STOREKEEPER_MONGO_URL="${{secrets.STOREKEEPER_MONGO_URL}}"
            cd /opt/docker/services/storekeeper
            ls
            docker-compose -f docker-compose.yml up
            docker ps